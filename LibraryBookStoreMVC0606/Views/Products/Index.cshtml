@model PaginatedList<BookStoreLibrary.Models.Product>

@{
    ViewData["Title"] = "Products List";
}

<h2>Products List</h2>

<p>
    <a asp-action="Create">Create New Product</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ProductCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
            </th>
            <th>
                Category
            </th>
            <th>
                Manufacturer
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => product.ProductCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => product.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => product.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => product.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => product.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => product.Manufacturer.ManufacturerName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@product.ProductId">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@product.ProductId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="pagination-wrapper">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })" aria-label="First">
                    <span aria-hidden="true">«</span>
                </a>
            </li>
            <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex - 1, pageSize = Model.PageSize })" aria-label="Previous">
                    <span aria-hidden="true">‹</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }
            <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageIndex + 1, pageSize = Model.PageSize })" aria-label="Next">
                    <span aria-hidden="true">›</span>
                </a>
            </li>
            <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, pageSize = Model.PageSize })" aria-label="Last">
                    <span aria-hidden="true">»</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

@section Scripts {
    <!-- Optional: Add any custom scripts here -->
}